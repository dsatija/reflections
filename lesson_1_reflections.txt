How did viewing a diff between two versions of a file help you see the bug that was introduced?
viewing the diff between two files made it easier to find the bug as it clearly showed the typo error.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
easy access to previous versions makes us view the changes in the code easily in order to find the bug.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
choosing helps us to be responsible for the changes done n prevents too mch cluttering of history docs.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
saving multiple files is important as sometimes fies are interdependent and hence may cause problems in running the program successfully.

How can you use the commands git log and git diff to view the history of files?
go to version control dir n hit "git log" in git bash
get the commit ids to be cmpared
then hit
git diff command 1 command 2 
 git log gives the history of commits n git diff gives the difference b/w 2 commits.
 
 How might using version control make you more confident to make changes that could break something?
 we can revert the code to previous version anytime if we find a new bug introduces an are unable to troubleshoot,so making changes is easier as we dont need to worry about losing the already working version.
 
 Now that you have your workspace set up, what do you want to try using Git for?
 code versioning 
